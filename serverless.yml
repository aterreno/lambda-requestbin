service:
  name: requestbin

# Add the serverless-webpack plugin
plugins:
  - serverless-webpack
  - serverless-plugin-cloudfront-lambda-edge
  - serverless-domain-manager

custom:
  customDomain:
    domainName: request.lol
    basePath: ''
    stage: ${self:provider.stage}
    createRoute53Record: true
  bucket: iopipe-requestbin

environment:
  IOPIPE_TOKEN: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJhNDAyZTQzNy0wNzIyLTQ0ZDktOGUyNy1jMGFjMjc2MzgxZTQiLCJqdGkiOiJmYTQzMDQxMi0zYThkLTQ5MzgtODA4My00YWIxODRjNmZmZjEiLCJpYXQiOjE1MDAzODgzMjgsImlzcyI6Imh0dHBzOi8vaW9waXBlLmNvbSIsImF1ZCI6Imh0dHBzOi8vaW9waXBlLmNvbSxodHRwczovL21ldHJpY3MtYXBpLmlvcGlwZS5jb20vZXZlbnQvLGh0dHBzOi8vZ3JhcGhxbC5pb3BpcGUuY29tIn0.Iez7L1pRsC1gk50H6-Qh99ZaduFfCixAPxgkfPmpElI
  S3BUCKET: ${self:custom.bucket}

provider:
  name: aws
  runtime: nodejs6.10
  iamRoleStatements:
    - Effect: Allow
      Action:
        - s3:PutObject
      Resource: "arn:aws:s3:::${self:custom.bucket}/*"

functions:
  getrequesturl:
    handler: index.getRequestURL
    events:
      - http:
          method: get
          path: /geturl
  requestbin:
    handler: index.handleRequest
    events:
      - http:
          method: any
          path: '/req/{token}'
  s3auth:
    handler: s3auth.handler
    events:
      - lambdaAtEdge:
          distribution: 'requestbin'
          eventType: 'origin-request'

resources:
  Resources:
    newResource:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:custom.bucket}
        LifecycleConfiguration:
          Rules:
          - Id: ExpirationRule
            Status: Enabled
            ExpirationInDays: '1'
